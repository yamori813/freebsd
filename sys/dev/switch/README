

switch_get_caps
/* Switch capability list */
struct switch_caps {

	uint8_t version;	/* Version: Now 0. */
	uint8_t cmd;		/* 0 - Get, 1 - Set */
	uint8_t status;		/* Command status */
	uint8_t ports;		/* Number of ports */
	uint32_t main;
#define SWITCH_CAPS_MAIN_PORT_POWER	(1<<0)
#define SWITCH_CAPS_MAIN_PORT_MIRROR	(1<<1)		/* Can do port mirror */
#define SWITCH_CAPS_MAIN_PORT_SECURITY	(1<<2)		/* Can limit n MACs */
	uint32_t vlan;
#define SWITCH_CAPS_VLAN_PORT		(1<<0)		/* Support port based */
#define SWITCH_CAPS_VLAN_DOT1Q		(1<<1)		/* 802.1q */
#define SWITCH_CAPS_VLAN_ISL		(1<<2)		/* ISL */
#define SWITCH_CAPS_VLAN_GLBL_UNTG	(1<<3)		/* Global tag/untag */
#define SWITCH_CAPS_VLAN_LAN_WAN	(1<<4)		/* LAN/WAN spliting */
#define SWITCH_CAPS_VLAN_DOUBLE_TAG	(1<<5)		/* Q-in-Q */
#define SWITCH_CAPS_VLAN_MAX_SHIFT_MASK	0x0000fff0 	/* max VLAN index */
#define SWITCH_CAPS_VLAN_MAX_SHIFT_SHIFT 4 		/* 4096-full support */
	uint32_t qos;
#define SWITCH_CAPS_QOS_QUEUES_MASK	0x00000007	/* 2 - 4 queues */
#define SWITCH_CAPS_QOS_QUEUES_SHIFT	0 		/* 3 - 8 queues */
	uint32_t lacp;
	uint32_t stp;
	uint32_t acl;
	uint32_t stat;
};

switch_set_reg		registers access
switch_get_reg
(0<<30) | reg) /* Access to switch registers */
(1<<30) | reg) /* Access to parent bus registers (miibus f.e.) */
(2<<30) | reg) /* Access to child miibus registers */

switch_reset_subsys
SWITCH_RESETSUB_SWITCH	reset switch
SWITCH_RESETSUB_PORT	reset one port or all (if SWITCH_RESETSUB_PORT|SWITCH_RESETSUB_ALLPORTS)
SWITCH_RESETSUB_VLANS	reset vlan table
SWITCH_RESETSUB_QOS	reset QoS setup

switch_set_pvid		assign VID to port
switch_get_pvid		get PVID

switch_set_pflags	set port flags
switch_get_pflags	get port flags

switch_set_vid		map VID to VLAN index
switch_get_vid		get mapping

switch_set_vlanports	set VLAN members (vlan_idx, port_map)
switch_get_vlanports	get
switch_set_vlanutports	set VLAN untagged members (vlan_idx, port_map)
switch_get_vlanutports	get

switch_miibus_readreg	child miibus access
switch_miibus_writereg


